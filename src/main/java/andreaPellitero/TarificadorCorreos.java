/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package andreaPellitero;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.text.DecimalFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author andre
 */
public class TarificadorCorreos extends javax.swing.JFrame {
    DecimalFormat decimal = new DecimalFormat ("#0.00"); // Control de 2 decimales
    protected double precioTotal;
    
    /**
     * Creates new form NewJFrame
     */
    public TarificadorCorreos() {
        initComponents();
        this.setResizable(false);
        this.setTitle("Tarificador Correos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        checkDeclarado = new javax.swing.JCheckBox();
        checkAcuse = new javax.swing.JCheckBox();
        calcular = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        modalidad = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        valorDeclarado = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        peso = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        precio = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(3, 60, 113));
        jLabel1.setText("✉   Tarificador de Correos  ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 80));

        jPanel1.setBackground(new java.awt.Color(254, 206, 0));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Tipo de envío");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Modalidad");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Destino");

        checkDeclarado.setBackground(new java.awt.Color(254, 206, 0));
        checkDeclarado.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        checkDeclarado.setText("  Valor Declarado");
        checkDeclarado.setEnabled(false);
        checkDeclarado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDeclaradoActionPerformed(evt);
            }
        });

        checkAcuse.setBackground(new java.awt.Color(254, 206, 0));
        checkAcuse.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        checkAcuse.setText("  Acuse de Recibo");
        checkAcuse.setActionCommand(" Acuse de Recibo");
        checkAcuse.setEnabled(false);
        checkAcuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAcuseActionPerformed(evt);
            }
        });

        calcular.setBackground(new java.awt.Color(0, 51, 102));
        calcular.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        calcular.setForeground(new java.awt.Color(255, 255, 255));
        calcular.setText("CALCULAR");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cartas", "Tarjetas", "Postales" }));

        modalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordinaria", "Certificada", "Urgente", "Urgente Certificada" }));
        modalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modalidadActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nacional" }));

        valorDeclarado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        valorDeclarado.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        valorDeclarado.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("Peso en gramos");

        peso.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        peso.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 102));
        jLabel5.setText("El precio total del envío es:");

        precio.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        precio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setText("©  Andrea Pellitero Castrillo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(modalidad, javax.swing.GroupLayout.Alignment.LEADING, 0, 179, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(checkAcuse, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkDeclarado)
                        .addGap(39, 39, 39)
                        .addComponent(valorDeclarado)))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(precio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 8, Short.MAX_VALUE)
                                .addComponent(jLabel5)))
                        .addGap(37, 37, 37))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(94, 94, 94))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(modalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkAcuse)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkDeclarado)
                            .addComponent(valorDeclarado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 720, 440));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed
        /*
        Según que valor se tenga seleccionado en la "Modalidad"
        se le asocia un valor al precioTotal
        */
        if (modalidad.getSelectedItem() == "Ordinaria" ) {
            if (Integer.parseInt(peso.getText()) > 0 &&
                Integer.parseInt(peso.getText()) <= 20) { // Más de 20g
                precioTotal = precioTotal + 0.70;
            } else if (Integer.parseInt(peso.getText()) > 20 && // Entre 20-50g
                Integer.parseInt(peso.getText()) <= 50) { 
                precioTotal = precioTotal + 0.80;
            } else if (Integer.parseInt(peso.getText()) > 50 && // 50-100g
                Integer.parseInt(peso.getText()) <= 100) {
                precioTotal = precioTotal + 1.25;
            } else if (Integer.parseInt(peso.getText()) > 100 && // 100-500g
                Integer.parseInt(peso.getText()) <= 500) {
                precioTotal = precioTotal + 2.50;
            } else if (Integer.parseInt(peso.getText()) > 500 && // 500-1000g
                Integer.parseInt(peso.getText()) <= 1000) {
                precioTotal = precioTotal + 5.15;
            } else if (Integer.parseInt(peso.getText()) > 1000 && // 1000-2000g
                Integer.parseInt(peso.getText()) <= 2000) {
                precioTotal = precioTotal + 5.60;
            } else if (Integer.parseInt(peso.getText()) > 2000) { // No se puede más de 2000g
                String error = "No se hacen envíos de más de 2000g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(peso.getText()) <= 0) { 
                String error = "El envío debe de pesar más de 0g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (modalidad.getSelectedItem() == "Certificada" ) {
            if (Integer.parseInt(peso.getText()) > 0 &&
                Integer.parseInt(peso.getText()) <= 20) {
                precioTotal = precioTotal + 4.15;
            } else if ( Integer.parseInt(peso.getText()) > 20 &&
                Integer.parseInt(peso.getText()) <= 50) {
                precioTotal = precioTotal + 4.25;
            } else if ( Integer.parseInt(peso.getText()) > 50 &&
                Integer.parseInt(peso.getText()) <= 100) {
                precioTotal = precioTotal + 4.70;
            } else if ( Integer.parseInt(peso.getText()) > 100 &&
                Integer.parseInt(peso.getText()) <= 500) {
                precioTotal = precioTotal + 5.95;
            } else if ( Integer.parseInt(peso.getText()) > 500 &&
                Integer.parseInt(peso.getText()) <= 1000) {
                precioTotal = precioTotal + 8.60;
            } else if ( Integer.parseInt(peso.getText()) > 1000 &&
                Integer.parseInt(peso.getText()) <= 2000) {
                precioTotal = precioTotal + 9.05;
            } else if ( Integer.parseInt(peso.getText()) > 2000) {
                String error = "No se hacen envíos de más de 2000g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(peso.getText()) <= 0) { 
                String error = "El envío debe de pesar más de 0g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (modalidad.getSelectedItem() == "Urgente" ) {
            if (Integer.parseInt(peso.getText()) > 0 &&
                Integer.parseInt(peso.getText()) <= 20) {
                precioTotal = precioTotal + 4.10;
            } else if ( Integer.parseInt(peso.getText()) > 20 &&
                Integer.parseInt(peso.getText()) <= 50) {
                precioTotal = precioTotal + 4.22;
            } else if ( Integer.parseInt(peso.getText()) > 50 &&
                Integer.parseInt(peso.getText()) <= 100) {
                precioTotal = precioTotal + 4.74;
            } else if ( Integer.parseInt(peso.getText()) > 100 &&
                Integer.parseInt(peso.getText()) <= 500) {
                precioTotal = precioTotal + 6.38;
            } else if ( Integer.parseInt(peso.getText()) > 500) {
                String error = "No se hacen envíos de más de 2000g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(peso.getText()) <= 0) { 
                String error = "El envío debe de pesar más de 0g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (modalidad.getSelectedItem() == "Urgente Certificada" ) {
            if (Integer.parseInt(peso.getText()) <= 20 &&
                    Integer.parseInt(peso.getText()) > 0) {
                precioTotal = precioTotal + 8.28;
            } else if ( Integer.parseInt(peso.getText()) > 20 &&
                Integer.parseInt(peso.getText()) <= 50) {
                precioTotal = precioTotal + 8.40;
            } else if ( Integer.parseInt(peso.getText()) > 50 &&
                Integer.parseInt(peso.getText()) <= 100) {
                precioTotal = precioTotal + 8.92;
            } else if ( Integer.parseInt(peso.getText()) > 100 &&
                Integer.parseInt(peso.getText()) <= 500) {
                precioTotal = precioTotal + 10.55;
            } else if ( Integer.parseInt(peso.getText()) > 500 &&
                Integer.parseInt(peso.getText()) <= 1000) {
                precioTotal = precioTotal + 14.00;
            } else if ( Integer.parseInt(peso.getText()) > 1000 &&
                Integer.parseInt(peso.getText()) <= 2000) {
                precioTotal = precioTotal + 14.58;
            } else if ( Integer.parseInt(peso.getText()) > 2000) {
                String error = "No se hacen envíos de más de 2000g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(peso.getText()) <= 0) { 
                String error = "El envío debe de pesar más de 0g";
                JOptionPane.showMessageDialog(new JFrame(), error, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        /*
        Precio al que está valorado el envío, se introduce en 
        valorDeclarado y por cada intervalo de 50€ se cobran 2,10€, y luego 
        se suma al precio total
        Por ejemplo:
        Entre 1 y 50€ --> 2,10€
        Entre 51 y 100€ --> 4,20€
        Entre 101 y 150€ --> 6,30€
        ...
        */
            if (checkDeclarado.isSelected()) {
                int contador = 0;
                double total = 0;
                for (int i = 0; i <= Integer.parseInt(valorDeclarado.getText()); i = i + 50){
                    contador++;
                    total = contador * 2.10;
                }
                precioTotal = precioTotal + total;
            }
            
        /*
        Si el Acuse de Recibo está seleccionado: 
        le suma 1.94 a la variable precioTotal
        */
        if (checkAcuse.isSelected()) {
           precioTotal = precioTotal + 1.94; // 1.94 es el valor del acuse de recibo
        } 
        
       
        /*
        Se muestra el valor de la variable precioTotal en la etiqueta "precio"
        Se pone la variable precioTotal a cero
        */
        precio.setText(decimal.format(precioTotal) + " €");
        precioTotal = 0;
        
        
    }//GEN-LAST:event_calcularActionPerformed

    private void checkDeclaradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDeclaradoActionPerformed
        /*
        Si el checkDeclarado está seleccionado: 
        le dice que es editable y le vacia de texto de valorDeclarado
       
        */
        
        if (checkDeclarado.isSelected()) {
            valorDeclarado.setEnabled(true); // Habilitado para introducir un nº
            valorDeclarado.setText(null);
        } else if (checkAcuse.isSelected() && checkDeclarado.isSelected()){
            valorDeclarado.setEnabled(true);
            valorDeclarado.setText(null);
        } else {
            valorDeclarado.setEnabled(false); // Deshabilitado
            valorDeclarado.setText(null);   
        } 
        
        
    }//GEN-LAST:event_checkDeclaradoActionPerformed

    private void modalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modalidadActionPerformed
        /*
        Si es Ordinaria y Urgente --> No se puede marcar checkAcuse y checkDeclarado
        Si es Certificada y Urgente Certificada --> Si se pueden marcar
        */
        if ("Ordinaria".equals(modalidad.getSelectedItem())) {
            checkAcuse.setEnabled(false);
            checkDeclarado.setEnabled(false);
            valorDeclarado.setEnabled(false);
        } else if ("Urgente".equals(modalidad.getSelectedItem())) {
            checkAcuse.setEnabled(false);
            checkDeclarado.setEnabled(false);
            valorDeclarado.setEnabled(false);
        } else if ("Certificada".equals(modalidad.getSelectedItem())) {
            checkAcuse.setEnabled(true);
            checkDeclarado.setEnabled(true);
            valorDeclarado.setEnabled(true);
        } else if ("Urgente Certificada".equals(modalidad.getSelectedItem())) {
            checkAcuse.setEnabled(true);
            checkDeclarado.setEnabled(true);
            valorDeclarado.setEnabled(true);
        }
        
    }//GEN-LAST:event_modalidadActionPerformed

    private void checkAcuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAcuseActionPerformed
        /*
        El checkAcuse debe de estar seleccionado a la vez con el checkDeclarado
        porque solo no tiene nada que ver con valorDeclarado.
        */
        if (checkAcuse.isSelected()) {
            valorDeclarado.setEnabled(false);
            valorDeclarado.setText(null);
        } else if (checkAcuse.isSelected() && checkDeclarado.isSelected()){
            valorDeclarado.setEnabled(true);
            valorDeclarado.setText(null);
        }
    }//GEN-LAST:event_checkAcuseActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TarificadorCorreos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TarificadorCorreos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TarificadorCorreos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TarificadorCorreos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TarificadorCorreos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calcular;
    private javax.swing.JCheckBox checkAcuse;
    private javax.swing.JCheckBox checkDeclarado;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> modalidad;
    private javax.swing.JTextField peso;
    private javax.swing.JLabel precio;
    private javax.swing.JTextField valorDeclarado;
    // End of variables declaration//GEN-END:variables
}
